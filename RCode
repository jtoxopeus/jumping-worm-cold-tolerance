#this code should be run in R v4.0.3 or higher, ideally using RStudio.

#all variable names and abbreviations associated with the code below are 
#explained in the ReadMe at https://github.com/jtoxopeus/jumping-worm-cold-tolerance

setwd("~/Jumping worms ms")

##################################################################
##                                                              ##
##        Lethal temperature (acute 1 h cold shocks)            ##
##                                                              ##
##################################################################

my.data <- read.csv("LTemp.csv") #read in data
str(my.data)
my.data <- subset(my.data, my.data$Treatment=="Summer")

my.model <- glm(cbind(NAlive,NDead)~Temp, binomial, my.data) #logistic regression
#significant decline in survival as temperature decreases

summary(my.model)
#Call:
#  glm(formula = cbind(NAlive, NDead) ~ Temp, family = binomial, 
#      data = my.data)
#
#Deviance Residuals: 
#  1        2        3        4  
#-0.6276   0.3016  -0.2524   0.1429  
#
#Coefficients:
#            Estimate Std. Error z value Pr(>|z|)   
#(Intercept)  -0.7334     0.6519  -1.125  0.26059   
#Temp          1.4794     0.5430   2.724  0.00644 **
#  ---
#  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
#
#(Dispersion parameter for binomial family taken to be 1)
#
#Null deviance: 27.24677  on 3  degrees of freedom
#Residual deviance:  0.56895  on 2  degrees of freedom
#AIC: 8.9727
#
#Number of Fisher Scoring iterations: 6

####Interpreting logistic regression
#formula:
#p = exp(y) / [1 + exp(y)], where: y = b0 + b1*x, and 
#b0 and b1 are the coefficients from the model
#p = exp(b0+b1*x)/[1+exp(b0+b1*x)]

#creating a logistic regression line to plot
x <- seq(-2, 5, by=0.01) #x variable; temperature ranging from 38 to 46
b0 <- my.model$coefficients[1] #coefficient 1 (intercept)
b1 <- my.model$coefficients[2] #coefficient 2 (slope for Temperature)
y <- exp(b0+b1*x)/(1+exp(b0+b1*x)) #y variable

par(mfrow=c(1,1), mar=c(4,4,1,0), las=1, cex=0.75, xpd=TRUE)

plot(x=my.data$Temp,y=my.data$PAlive, xlim=c(-2, 6), ylim=c(0,1),
     xlab="", ylab="", axes=FALSE)
axis(side=2, at=c(0,0.2,0.4,0.6,0.8,1), cex.axis=1,las=1,
     labels = c(0,20,40,60,80,100), pos=-2.25, tck=-0.01)
lines(c(-2.25,-2.25),c(-0.025,1))
axis(side=1, at=c(-2,0,2,4,6), cex.axis=1,las=1,
     labels = c(-2,0,2,4,6), pos=-0.025, tck=-0.01)
lines(c(-2.25,6),c(-0.025,-0.025))
mtext("Proportion (%) of worms alive",side=2, line=2.5, las=0, cex=0.75)
mtext("Temperature (°C) of 1 h cold shock", side=1,padj=1, line=1.5,cex=0.75)

lines(y ~ x, col="#888888") #logistic regression line
points(my.data$Temp, my.data$PAlive, pch=16) #actual data points
arrows(my.data$Temp, my.data$PAlive-my.data$SEP, #standard error of proportion
       my.data$Temp, my.data$PAlive+my.data$SEP,
       length=0.02, angle=90, code=3)

#export "LTemp.pdf" 3.5" x 3"

##################################################################
##                                                              ##
##              Lethal time at 5C (mild chilling)               ##
##                                                              ##
##################################################################

my.data <- read.csv("LTime.csv") #read in data
str(my.data)

my.model <- glm(cbind(NAlive,NDead)~TimeInCold, binomial, my.data) #logistic regression
#significant decline in survival as temperature decreases

summary(my.model)
#Call:
#  glm(formula = cbind(NAlive, NDead) ~ TimeInCold, family = binomial, 
#      data = my.data)
#
#Deviance Residuals: 
#  1           2           3           4           5           6  
#7.300e-08   7.300e-08   2.747e-06   1.753e-05  -4.710e-08  -7.300e-08  
#
#Coefficients:
#             Estimate Std. Error z value Pr(>|z|)
#(Intercept)    33.978  64211.841   0.001        1
#TimeInCold     -1.483   2675.493  -0.001        1
#
#(Dispersion parameter for binomial family taken to be 1)
#
#Null deviance: 7.7818e+01  on 5  degrees of freedom
#Residual deviance: 3.1492e-10  on 4  degrees of freedom
#AIC: 6.4342
#
#Number of Fisher Scoring iterations: 24

#creating a logistic regression line to plot
x <- seq(0, 48, by=0.01) #x variable; temperature ranging from 38 to 46
b0 <- my.model$coefficients[1] #coefficient 1 (intercept)
b1 <- my.model$coefficients[2] #coefficient 2 (slope for Temperature)
y <- exp(b0+b1*x)/(1+exp(b0+b1*x)) #y variable

#plot
par(mfrow=c(1,1), mar=c(4,4,1,0), las=1, cex=0.75, xpd=TRUE)

plot(x=my.data$TimeInCold,y=my.data$PAlive, xlim=c(0, 50), ylim=c(0,1),
     xlab="", ylab="", axes=FALSE)
axis(side=2, at=c(0,0.2,0.4,0.6,0.8,1), cex.axis=1,las=1,
     labels = c(0,20,40,60,80,100), pos=-1, tck=-0.01)
lines(c(-1,-1),c(-0.025,1))
axis(side=1, at=c(0,10,20,30,40,50), cex.axis=1,las=1,
     labels = c(0,10,20,30,40,50), pos=-0.025, tck=-0.01)
lines(c(-1,50),c(-0.025,-0.025))
mtext("Proportion (%) of worms alive",side=2, line=2.5, las=0, cex=0.75)
mtext("Time (h) at 5°C", side=1,padj=1, line=1.5,cex=0.75)

lines(y ~ x, col="#888888") #logistic regression line
points(my.data$TimeInCold, my.data$PAlive, pch=16) #actual data points
arrows(my.data$TimeInCold, my.data$PAlive-my.data$SEP, #standard error of proportion
       my.data$TimeInCold, my.data$PAlive+my.data$SEP,
       length=0.02, angle=90, code=3)

#export "LTime.pdf" 3.5" x 3"
#create a two-panel figure with LTemp and LTime in InkScape or other software

##################################################################
##                                                              ##
##          Critical thermal minimum (CTmin)                    ##
##                                                              ##
##################################################################

my.data <- read.csv("CTmin.csv") #read in data
str(my.data)

my.model <- glm(CTmin~Mass+Treatment, data=my.data) #ANCOVA with mass as a covariate
#significant effect of fall vs. summer conditions (Treatment) on CTmin

summary(my.model)
#Call:
#  glm(formula = CTmin ~ Mass + Treatment, data = my.data)
#
#Deviance Residuals: 
#  Min       1Q   Median       3Q      Max  
#-1.7606  -0.6004   0.0766   0.7876   1.3482  
#
#Coefficients:
#                Estimate Std. Error t value Pr(>|t|)  
#(Intercept)     -0.73078    0.56761  -1.287   0.2134  
#Mass            -0.08003    0.83682  -0.096   0.9248  
#TreatmentSummer  1.43301    0.56756   2.525   0.0206 *
#  ---
#  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
#
#(Dispersion parameter for gaussian family taken to be 0.9243116)
#
#Null deviance: 26.138  on 21  degrees of freedom
#Residual deviance: 17.562  on 19  degrees of freedom
#AIC: 65.476
#
#Number of Fisher Scoring iterations: 2

#for boxplot...
CTmin.yS <- my.data$CTmin[my.data$Treatment=="Summer"]
CTmin.yF <- my.data$CTmin[my.data$Treatment=="Fall"]

##################################################################
##                                                              ##
##                Supercooling point (SCP)                      ##
##                                                              ##
##################################################################

my.data <- read.csv("SCP.csv") #read in data
str(my.data)

my.model <- glm(SCP~Mass+Treatment, data=my.data) #ANCOVA with mass as a covariate
#significant effect of mass but not fall vs. summer conditions (Treatment) on SCP

summary(my.model)
#Call:
#  glm(formula = SCP ~ Mass + Treatment, data = my.data)
#
#Deviance Residuals: 
#  Min        1Q    Median        3Q       Max  
#-1.38573  -0.45033  -0.08834   0.38320   2.62220  
#
#Coefficients:
#                  Estimate Std. Error t value Pr(>|t|)    
#  (Intercept)      -5.2944     0.4746 -11.155 8.81e-10 ***
#  Mass              1.3490     0.6224   2.168   0.0431 *  
#  TreatmentSummer  -0.3534     0.5130  -0.689   0.4992    
#---
#  Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
#
#(Dispersion parameter for gaussian family taken to be 0.7936365)
#
#Null deviance: 19.113  on 21  degrees of freedom
#Residual deviance: 15.079  on 19  degrees of freedom
#AIC: 62.123
#
#Number of Fisher Scoring iterations: 2

#for boxplot...
SCP.yS <- my.data$SCP[my.data$Treatment=="Summer"]
SCP.yF <- my.data$SCP[my.data$Treatment=="Fall"]

#plot both CTmin and SCP on the same plot
par(mfrow=c(1,1), mar=c(4,4,1,0), las=1, cex=0.75)

plot(my.data$SCP ~ my.data$Treatment, type="n",
     xlim=c(0.5,2.5),ylim=c(-6.2,2.2), 
     ylab="", xlab="", axes=FALSE)
axis(side=2, at=c(-6,-4,-2,0,2), cex.axis=1,las=1,
     labels = c(-6,-4,-2,0,2), pos=0.5, tck=-0.025)
lines(c(0.5,0.5),c(-6.2,2.2))
axis(side=1, at=c(1,2), cex.axis=1,las=1,
     labels = c("CTmin", "SCP"), pos=-6.2, tck=-0.025)
lines(c(0.5,2.5),c(-6.2,-6.2))
mtext("Temperature (°C)",side=2, line=2.5, las=0, cex=0.75)
mtext("Cold tolerance metric", side=1,padj=1, line=1.5,cex=0.75)

boxplot(CTmin.yS,add=TRUE, at=0.8, outline=FALSE,
        boxwex=0.75,col="#D55E00", axes=FALSE,lty=1)
boxplot(CTmin.yF,add=TRUE, at=1.2, outline=FALSE,
        boxwex=0.75,col="#56B4E9", axes=FALSE,lty=1)
boxplot(SCP.yS,add=TRUE, at=1.8, outline=FALSE,
        boxwex=0.75,col="#D55E00", axes=FALSE,lty=1)
boxplot(SCP.yF,add=TRUE, at=2.2, outline=FALSE,
        boxwex=0.75,col="#56B4E9", axes=FALSE,lty=1)

legend(2,2, legend=c("Summer", "Fall"),
       col = c("#D55E00","#56B4E9"), pch=15, pt.cex=0.75,
       x.intersp = 1, y.intersp = 2)

#export "CTminAndSCP.pdf" 3.5" x 3"

##################################################################
##                                                              ##
##          Glucose concentration (mg/g tissue)                 ##
##                                                              ##
##################################################################

my.data <- read.csv("Glucose.csv") #read in data
str(my.data)

my.model <- t.test(Glucose~Treatment, data=my.data) #Welch two sample t-test
#no significant effect of fall vs. summer conditions on glucose concentrations

my.model[1:3]
#$statistic
#          t 
#-0.07596395 
#
#$parameter
#      df 
#8.127649 
#
#$p.value
#[1] 0.9412844

#for boxplot...
Glucose.yS <- my.data$Glucose[my.data$Treatment=="Summer"]
Glucose.yF <- my.data$Glucose[my.data$Treatment=="Fall"]

#plot both CTmin and SCP on the same plot
par(mfrow=c(1,1), mar=c(4,4,1,0), las=1, cex=0.75)

plot(my.data$Glucose ~ my.data$Treatment, type="n",
     xlim=c(0.5,2.5),ylim=c(0,3), 
     ylab="", xlab="", axes=FALSE)
axis(side=2, at=c(0,1,2,3), cex.axis=1,las=1,
     labels = c(0,1,2,3), pos=0.5, tck=-0.025)
#lines(c(0.5,0.5),c(-6.2,2.2))
axis(side=1, at=c(1,2), cex.axis=1,las=1,
     labels = c("Summer", "Fall"), pos=0, tck=-0.025)
lines(c(0.5,2.5),c(0,0))
mtext("Glucose (mg/g tissue)",side=2, line=2.5, las=0, cex=0.75)
mtext("Treatment", side=1,padj=1, line=1.5,cex=0.75)

boxplot(Glucose.yS,add=TRUE, at=1, outline=FALSE,
        boxwex=1,col="#D55E00", axes=FALSE,lty=1)
boxplot(Glucose.yF,add=TRUE, at=2, outline=FALSE,
        boxwex=1,col="#56B4E9", axes=FALSE,lty=1)

#export "Glucose.pdf" 3.5" x 3"
#create a two-panel figure with CTmin and SCP plus Glucose in InkScape or other software
